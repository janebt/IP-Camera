<script type="text/javascript">
	function init()
	{
		function errorHandle(code, objOrId)
		{
			switch(parseInt(code))
			{
			case ENONE:
				return true;
			case IPCCVNUMERR:
				showStr = errStr.IPCRangeOver;
				break;
			case IPCCVENERR:
				showStr = errStr.IPCParamInvalid;
				break;
			case IPCCVSIZEERR:
				showStr = errStr.coverRectSizeErr;
				break;
			case IPCUMGUESTNAUTH:
				showStr = errStr.invPermissionDenied;
				break;
			default:
				showStr = errStr.invRequestFail;
				break;
			}

			closeToast();
			showAlert(showStr, objOrId);
			return false;
		}

		function getCoverRange()
		{
			var converArry = [];
			var len = plugin.getRegionCoverLen();
			var i = 0, item, obj, j = 0;

			for (; i < len; i++)
			{
				item = plugin.getRegionCoverInfo(i);
				if (item.x != PLUGIN_STATE_MINUS)
				{
					obj = {};
					obj[NAME_XCOOR] = item.x.toString();
					obj[NAME_YCOOR] = item.y.toString();
					obj[NAME_WIDTH] = item.width.toString();
					obj[NAME_HEIGHT] = item.height.toString();
					converArry[j++] = obj;
				}
			}

			return converArry;
		}

		function saveCoverState(callBack)
		{
			var reqData = {}, secData;

			showToast("loading");

			reqData[FILE_NAME] = {};
			secData = reqData[FILE_NAME][COVER_SEC] = {};
			secData[COVER_ENABLE] = coverSwitch.state == 1 ? COVER_ENABLE_ON : COVER_ENABLE_OFF;
			$.modify(reqData, function(result){
				if (true == errorHandle(result[ERR_CODE]))
				{
					callBack();
				}
			});
		}

		/* 保存配置 */
		function saveCoverRange()
		{
			saveCoverState(function(){
				var reqData = {};
				var secObj = {};

				showToast("loading");
				reqData[FILE_NAME] = {};
				reqData[FILE_NAME][ADD_COVER_REG] = secObj;
				secObj[REGION_INFO_SEC] = getCoverRange();

				$.action(reqData, function(result){
					if (true == errorHandle(result[ERR_CODE]))
					{
						showToast("success");
					}
				});
			});
		}

		/* 显示覆盖区域的编辑方框 */
		function setCoverRange()
		{
			var item;

			for (var i = 0, len = list.length; i < len; i++)
			{
				item = list[i];
				plugin.showRegionCoverInfo({x:item[NAME_XCOOR], y:item[NAME_YCOOR],
											width:item[NAME_WIDTH], height:item[NAME_HEIGHT]});
			}
		}

		/* 删除当前选中的方框 */
		function delCoverRange()
		{
			plugin.delRegionCoverInfo(PLUGIN_STATE_ON);
		}

		/* 删除所有方框 */
		function clearCoverRange()
		{
			plugin.delRegionCoverInfo(PLUGIN_STATE_MINUS);
		}

		function coverSwitchHD(state) {
			var hideobj = document.getElementById("hidebg");

			if(0 == state)
			{
				plugin.setOSDStatus(0);
				hideobj.style.display = "block";
				hideobj.style.height = getoffset(id("save")).top - getoffset(id("videoPluginCon")).top + "px";
			}
			else
			{
				plugin.setOSDStatus(1);
				hideobj.style.display = "none";
			}
		}

		function pageInit()
		{
			var reqData = {};

			reqData[FILE_NAME] = {};
			reqData[FILE_NAME][NAME] = COVER_SEC;
			reqData[FILE_NAME][KEY_TABLE] = REGION_INFO_SEC;

			plugin = new Plugin({id:"videoPluginCon", className:"vedioActiveX", readyHd:function(arg){
				if (PLUGIN_STATE_ON == arg && true == bFirstReady)
				{
					bFirstReady = false;
					plugin.setRegionCoverStatus(PLUGIN_STATE_ON);
					setCoverRange();
					plugin.setOSDStatus(coverSwitch.state);
				}
			}});

			$.query(reqData, function(result){
				if (true == errorHandle(result[ERR_CODE]))
				{
					if (true == $.local)
					{
						coverSwitch = new Switch("coverSwitch", 0, coverSwitchHD);
						return;
					}

					list = formatTableData(result[FILE_NAME][REGION_INFO_SEC]);
					coverSwitch = new Switch("coverSwitch", result[FILE_NAME][COVER_SEC][COVER_ENABLE] == COVER_ENABLE_OFF ? PLUGIN_STATE_OFF : PLUGIN_STATE_ON, coverSwitchHD);
					plugin.playVideo();
					showDetailCon();
				}
			});

			id("save").onclick = saveCoverRange;
			id("clear").onclick = clearCoverRange;
			id("del").onclick = delCoverRange;
		}

		var FILE_NAME = uciCover.fileName;
		var COVER_SEC = uciCover.secName.cover;
		var COVER_ENABLE = uciCover.optName.enabled;
		var COVER_ENABLE_ON = uciCover.optValue.enableVal.on;
		var COVER_ENABLE_OFF = uciCover.optValue.enableVal.off;
		var COVER_REG_SEC = uciCover.secName.coverReg;
		var REGION_INFO_SEC = uciCover.secType.regionInfo;
		var NAME_XCOOR = uciCover.optName.xCoor;
		var NAME_YCOOR = uciCover.optName.yCoor;
		var NAME_WIDTH = uciCover.optName.width;
		var NAME_HEIGHT = uciCover.optName.height;
		var coverSwitchDes = id("coverSwitchDes");
		var plugin, coverSwitch, bFirstReady = true, list;
		var ADD_COVER_REG = uciCover.actionName.addCoverReg;

		pageInit();
	}
	init();
</script>
<style type="text/css">
	ul.lineConfCameraCover{
		margin-top:20px;
		margin-bottom:25px;
	}
	#coverSwitchDes{
		margin-right:10px;
		width:90px;
	}
</style>
<div class="detailCon">
	<ul class="line">
		<li class="line lineA">
			<label id="coverSwitchDes" class="des desA">{%label.enableCoverRange%}</label>
			<div id="coverSwitch" class="switchCon">
				<i class="switchBg"></i>
				<i class="switchBall"></i>
			</div>
			<label class="des desH"></label>
		</li>
	</ul>
	<div style="position:relative;z-index:1;">
		<div id="hidebg"></div>
	</div>
	<div id="videoPluginCon"></div>
	<ul class="line lineA lineConfCameraCover">
		<li class="line">
			<input id="del" type="button" class="subBtnB btnA delIcon" value="{%btn.del%}" />
		</li>
		<li class="line ml">
			<input id="clear" type="button" class="subBtnB btnA clearIcon" value="{%btn.clean%}" />
		</li>
	</ul>
	<div class="funcBtnCon">
		<input id="save" class="subBtn btnA" type="button" value="{%btn.save%}" />
	</div>
</div>
