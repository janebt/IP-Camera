<style type="text/css">
	div.upObj{
		position:relative;
		*zoom:1;
	}
	#uploadIf{
		top:-9999px;
		position:absolute;
		visibility:hidden;
	}
	div.fileDiv{
		height:30px;
		overflow:hidden;
		position:relative;
		vertical-align:middle;
	}
	input.file{
		font-size:110px;
		top:-5px;
		right:-5px;
		opacity:0;
		filter:alpha(opacity:0);
		cursor:pointer;
		position:absolute;
		vertical-align:top;
		z-index:1;
	}
	#sysUpgrade{
		margin-left:10px !important;
		*margin-top:3px;
		*padding:2px 16px;
	}
	#upFileForm{
		display:inline-block;
		vertical-align:middle;
		width:430px;
		*width:443px;
		_width:430px;
		*display:inline;
		*zoom:1;
	}
	input.brower {
		margin-left:20px;
		width:88px;
	}
	ul.line label.desF{
		line-height:32px;
		color:#333333;
		margin-right:0;
		width:612px;
	}
	img.loading{
		display:inline-block;
		width:20px;
		height:20px;
		margin-left:12px;
		vertical-align:middle;
	}
	div.updateShowDiv{
		padding:20px 40px 30px 40px;
		background-color:#2a2a2a;
		border-radius:10px;
		width:520px;
		margin:0 auto;
	}
	p.newVer{
		font-size:16px;
		color:#a0a0a0;
		text-align:center;
		padding:20px 0;
		height:16px;
		line-height:16px;
		margin-bottom:15px;
	}
	p.updateNote{
		overflow:hidden;
	}
	div.updateInfo{
		color:#707070;
		font-size:14px;
	}
	p.slideDown{
		display:inline-block;
		_display:inline;
		*zoom:1;
	}
	p.slideDown span{
		color:#a0a0a0;
		pointer:cursor;
	}
	p.updateTime{
		margin-bottom:10px;
	}
	div.updateInfo p{
		line-height:24px;
	}
	div.btnFun{
		margin-top:35px;
		text-align:center;
	}
	div.btnFun input{
		background-color:#404040;
		margin:0 5px;
	}
	#newFwObj{
		top:0;
		position:absolute;
		margin:auto;
		width:100%;
		z-index:1020;
		visibility:hidden;
		*zoom:1;
	}
	ul.line li.line .disNone{
		display:none;
	}
	#onlineUpLi{
		display:none;
	}
</style>
<script type="text/javascript">
	function init()
	{
		var bCheckUpgradeVerClosed = false;
		var upgradeTimeoutHd = null;
		var formObj = document.forms[0];
		var file = id("fileName");
		var sysUpgrade = id("sysUpgrade");
		var onlineUpgradeCheckBtn = id("onlineUpgradeCheck");
		var newSoftVer = id("newSoftVer");
		var $newSoftInfo = $("#newSoftInfo");
		var browseBtn = $("input.fileBrowse");
		var chkPic = id("chkPic"), chkTip = id("chkTip");
		var hsNewFw = id("hsNewFw"), noNewFw = id("noNewFw");
		var updateNote = null, oSlideDown = null;
		var upgradeTimeoutTag = false;
		var t1, t2, checkTime, checkUpgradeHd;

		function errHandle(errNo)
		{
			switch (errNo)
			{
			case ENONE:
				return true;
			case EFWEXCEPTION:
			case EFWNOTSUPPORTED:
			case EFILETOOBIG:
				str = errStr.fwFmtErr;
				break;
			case EFWNOTINFLANDBL:
			case EFWNEWEST:
				str = errStr.fwNotSupported;
				break;
			case IPCUMGUESTNAUTH:
				str = errStr.invPermissionDenied;
				break;
			case EINVMEMORYOUT:
			case EINVDOWNLOADFWFAILED:
			case EINVSENDREQMSGFAILED:
			case EINVREQUESTTIMEOUT:
			case EINVCONNECTTINGCLOUDSERVER:
			case EINVLASTOPTIONISNOTFINISHED:
			case ESYSBUSY:
				str = errStr.fwDownLoadFailed;
				break;
			case EINVFMT:
			case EFWRSAFAIL:
			case EFWHWIDNOTMATCH:
			case EFWZONECODENOTMATCH:
			case EFWVENDORIDNOTMATCH:
			case EINVUPGRADEFWFAILED:
			default:
				str = errStr.fwUpgradeFailed;
				break;
			}

			failReboot();

			return false;
		}

		function failReboot()
		{
			var reqData = {
				system: {
					reboot:null
				}
			};

			$.action(reqData, function(){
				showProgBar(REBOOT_SECONDS, statusStr.rebootingForUpgrade, function(){
					lanDetecting(function(){
						window.location.reload();
					});
				});
			});
		}

		function errHandleCheckUpgradeInfo(errNo)
		{
			var showStr = "";
			var cloudErrRel;

			switch (parseInt(errNo))
			{
			case ENONE:
				return true;
			case EINVSENDREQMSGFAILED:
				showStr = errStr.invSendReqMsgFailed;
				break;
			case ESYSBUSY:
			case EINVLASTOPTIONISNOTFINISHED:
				showStr = errStr.invLastOptionIsNotFinished;
				break;
			case ESYSTEM:
				showStr = errStr.invRequestFail;
				break;
			case ENOMEMORY:
				showStr = errStr.invMemoryOut;
				break;
			case EINVGETDATAFAILED:
				showStr = errStr.invGetDataFailed;
				break;
			case EINVPARAMETER:
				showStr = errStr.invParameter;
				break;
			case EINVREQUESTTIMEOUT:
				showStr = errStr.invRequestTimeout;
				break;
			case EINVDEVICEIDNOTEXIST:
			case EINVERRORDEVICEIDFORMATERROR:
			case EINVILLEGALDEVICE:
				showStr = label.cloudDeviceInfoExpt;
				break;
			default:
				cloudErrRel = cloudErrHandle(errNo);
				if (cloudErrRel.result == false)
				{
					showStr = cloudErrRel.tip;
				}
				else
				{
					showStr = errStr.invRequestFail;
				}
				break;
			}

			chkPic.style.display = "none";
			chkTip.style.display = "none";
			showAlert(showStr);
			
			return false;
		}

		function checkFile()
		{
			var fileName = file.value;

			if (fileName == "")
			{
				showAlert(label.upWarn);
				return false;
			}
			else if (fileName.search(/\.bin$/) == -1)
			{
				showAlert(errStr.fileFmttErr);
				return false;
			}

			return true;
		}

		function upgradeTimeout()
		{
			upgradeTimeoutTag = true;
			id("uploadIf").onload = null;
			closeLoading();
			closeProgBar();
			clearTimeout(upgradeTimeoutHd);
			showAlert(errStr.upGradeFail);
			closeToast();
			id("uploadIf").contentWindow.location.reload();
			failReboot();
		}

		function upLoadCallBack(code)
		{
			closeToast();
			if (true == upgradeTimeoutTag)
			{
				return;
			}

			clearTimeout(upgradeTimeoutHd);
			upgradeTimeoutHd = null;
			closeLoading();

			if (ENONE == code)
			{
				showProgBar(SYSUPGRADE_SECONDS, label.upgrading, function(){
					lanDetecting(function(){
						window.location.reload();
					});
				}, false, statusStr.upgradeOk, statusStr.upgradeTip);
			}
			else
			{
				errHandle(code);
			}
		}

		function uploadEventBind()
		{
			file.onchange = function (){
				var tempStr = this.value;

				/* 统一所有浏览器不显示完全的文件路径 */
				tempStr = tempStr.substring(tempStr.lastIndexOf('\\') + 1);
				id("textfield").value = tempStr;
			};

			sysUpgrade.onclick = function()
			{
				if(GROUP_GUEST == $.group)
				{
					showAlert(errStr.invPermissionDenied);
					return;
				}
				if (true == checkFile())
				{
					var reqData = {};

					$("#uploadIf").one("load", function(){
						iFrmOnload("uploadIf", upLoadCallBack);
					});

					reqData[uciSystem.fileName] = {};
					reqData[uciSystem.fileName][uciSystem.actionName.firmUpgrade] = {"type": "0"};

					//showLoading(label.fwUploadTip, undefined, undefined, false);
					showToast("fwUpload");
					upgradeTimeoutHd = $.setTimeout(upgradeTimeout, 60000);

					$.action(reqData, function(data){
						if (ENONE == data[ERR_CODE])
						{
							formObj.action = $.orgURL(data["url"]);
							formObj.submit();
							formObj.reset();
							upgradeTimeoutTag = false;
						}
						else
						{
							upgradeTimeout();
						}
					});
				}
			};
		}

		function showNewFwInfo()
		{
			showCover(function(){
				var newFwObj = id("newFwObj");

				if (null == newFwObj)
				{
					newFwObj = document.createElement("div");
					newFwObj.id = "newFwObj";
					newFwObj.innerHTML = 
					'<div class="updateShowDiv" id="updateShowDiv">' +
						'<p class="newVer">' + label.findNewFw + '<span id="newVer">' + '</span>' + '</p>' +
						'<div class="updateInfo">' + 
							'<p class="updateTime">' + label.findNewFw + '<span id="updateTime">' + '</span>' + '</p>' + 
							'<p class="updateNote" id="updateNote">' + '</p>' + 
							'<p class="slideDown" id="slideDown">' + '...' + '<span>' + label.slideDown + '</span>' + '</p>' + 
						'</div>' +
						'<div class="btnFun">' + 
							'<input type="button" id="cancelUpgrade" class="subBtn btnA" value="{%btn.cancel%}" />' + 
							'<input type="button" id="onlineUpgrade" class="subBtn btnA" value="{%btn.fwStartUpgrade%}" />' + 
						'</div>' + 
					'</div>';
					document.body.appendChild(newFwObj);
				}
				updateNote = id("updateNote");
				oSlideDown = id("slideDown");
				newFwObj.style.visibility = "visible";
				newFwObj.style.top = "210px";

				id("cancelUpgrade").onclick = function(){
					hideCover(function(){
						newFwObj.style.top = "-9999px";
						newFwObj.style.visibility = "hidden";
					});
				};
				id("onlineUpgrade").onclick = function(){
					hideCover(function(){
						newFwObj.style.top = "-9999px";
						newFwObj.style.visibility = "hidden";
					});
					onlineUpFun();
				};
			});
		}

		function upGradeOnlineShow(newUpInfo, result, bInit)
		{
			var trueHei = 0;

			if (true == bInit)
			{
				if (true == newUpInfo)
				{
					hsNewFw.style.display = "inline-block";
				}

				return;
			}

			if (false == newUpInfo) /* 没有新软件信息 */
			{
				noNewFw.style.display = "inline-block";
			}
			else
			{
				showNewFwInfo();
				upgradeInfo = result[uciCloudConfig.fileName][uciCloudConfig.secName.upgradeInfo];
				id("newVer").innerHTML = (upgradeInfo[uciCloudConfig.optName.version]).split(" ")[0];
				updateNote.innerHTML = upgradeInfo[uciCloudConfig.optName.releaseLog].replace(/\r\n/gi, "<br/>");
				id("updateTime").innerHTML = upgradeInfo[uciCloudConfig.optName.releaseDate];

				updateNote.style.height = "auto";
				trueHei = parseInt(getNodeDefaultView(updateNote, "height"));
				if (80 < trueHei)
				{
					updateNote.style.height = "72px";
					oSlideDown.style.display = "block";
					oSlideDown.onclick = function(){
						this.style.display = "none";
						$("#updateNote").animate({"height":trueHei + "px"});
					};
				}
				else
				{
					oSlideDown.style.display = "none";
				}
			}
		}

		function getUpgradeInfo(bInit)
		{
			var dataObj = {};
			var fwNewNofify = 0;

			dataObj[uciDeviceInfo.fileName] = {};
			dataObj[uciDeviceInfo.fileName][KEY_NAME] = uciDeviceInfo.secName.info;
			dataObj[uciCloudConfig.fileName] = {};
			dataObj[uciCloudConfig.fileName][KEY_NAME] = [uciCloudConfig.secName.newFirmware, uciCloudConfig.secName.upgradeInfo];
			
			$.query(dataObj, function(result){
				var info, cloudDeviceInfo;

				if (ENONE == result[ERR_CODE])
				{
					info = result[uciDeviceInfo.fileName][uciDeviceInfo.secName.info];
					cloudDeviceInfo = result[uciCloudConfig.fileName][uciCloudConfig.secName.newFirmware];
					fwNewNofify = cloudDeviceInfo[uciCloudConfig.optName.fwNewNotify];
					fwNewNofify = checkNum(fwNewNofify) && parseInt(fwNewNofify) || uciCloudConfig.optValue.fwNewFalse;
					id("devName").innerHTML = info[uciDeviceInfo.optName.devName];
					id("curVer").innerHTML = (info[uciDeviceInfo.optName.swVer].split(" "))[0];
					upGradeOnlineShow(fwNewNofify == uciCloudConfig.optValue.fwNewTrue, result, bInit);
				}
				if (IPCUMGUESTNAUTH == result[ERR_CODE])
				{
					showAlert(errStr.invPermissionDenied);
					return;
				}

				if (true == bInit)
				{
					showDetailCon();
				}
			});
		}

		function onlineUpFun()
		{
			bCheckUpgradeVerClosed = false;

			showLoading(statusStr.fwCheckUpInfoTip, function(){
				bCheckUpgradeVerClosed = true;
			}, undefined, false);

			onlineUpgrade(function(){
					if (false == bCheckUpgradeVerClosed)
					{
						closeLoading();
						showAlert(gOnlineUpgradeNote);
						gOnlineUpgradeNote = "";
					}
				}, function(){
					if (false == bCheckUpgradeVerClosed)
					{
						closeLoading();
					}
				}
			);
		};

		function checkUpgradeFun()
		{
			bCheckUpgradeVerClosed = false;
			chkPic.style.display = "inline-block";
			chkTip.style.display = "inline-block";
			hsNewFw.style.display = "none";
			noNewFw.style.display = "none";

			onlineUpgradeCheck(errHandleCheckUpgradeInfo, function(errCode){
					if (false == bCheckUpgradeVerClosed)
					{
						if (parseInt(errCode) == EINVNOTFOUNTNEWFW)
						{
							noNewFw.style.display = "inline-block";
						}
						else
						{
							showConfirmIpc(errStr.updateNetworkExpt, function(choose){
								if (false == choose)
								{
									closeConfirm();
									checkUpgradeFun();
								}
							}, btn.cloudRetry);
						}
						chkPic.style.display = "none";
						chkTip.style.display = "none";
					}
				}, function(){
					if (false == bCheckUpgradeVerClosed)
					{
						getUpgradeInfo(false);
						chkPic.style.display = "none";
						chkTip.style.display = "none";
					}
				}
			);
		}

		onlineUpgradeCheckBtn.onclick = checkUpgradeFun;
		uploadEventBind();
		getUpgradeInfo(true);
	}
	init();
</script>
<div class="upObj detailCon detailConMorePad">
	<ul class="line">
		<li class="line lineG">
			<label class="des desD">{%label.upCurrHard%}</label>
			<label class="des desG" id="devName">---</label>
		</li>
		<li class="line lineG">
			<label class="des desD">{%label.upCurrSoftVer%}</label>
			<label class="des desG" id="curVer">v1.0</label>
		</li>
		<li class="line lineG">
			<label class="des desD">{%label.onlineUpgrade%}</label>
			<input type="button" id="onlineUpgradeCheck" value="{%label.fwCheckUpdate%}" class="subBtnB btnA" />
			<img class="loading disNone"  id="chkPic" src="../web-static/images/loading.gif" />
			<label class="des desH disNone" id="chkTip">{%label.fwCheckUpdating%}</label>
			<label class="des desH disNone" id="hsNewFw">{%label.hsUpgradeFw%}</label>
			<label class="des desH disNone" id="noNewFw">{%label.notFindNewFw%}</label>
		</li>
		<li class="line lineG">
			<label class="des desD">{%label.chooseFw%}</label>
			<form enctype="multipart/form-data" id="upFileForm" method="post" target="uploadIf">
				<div class="fileDiv">
					<iframe id="uploadIf" name="uploadIf"></iframe>
					<input type="text" id="textfield" class="text textB7" readonly="true" />
					<input type="button" value="{%btn.browse%}" class="subBtnB btnA brower" />
					<input type="file" class="file" name="filename" id="fileName" />
				</div>
			</form>
			<input type="button" id="sysUpgrade" class="subBtnB btnA" value="{%btn.fwUpgrade%}" />
		</li>
		<li  class="line lineG">
			<label class="des desD"> </label>
			<label class="des desF">{%label.upgradeDescTipPart1%}<a href="http://service.tp-link.com.cn/list_download_software_1_0.html">{%label.downloadCenter%}</a>{%label.upgradeDescTipPart2%}</label>
		</li>
	</ul>
</div>
